{"version":3,"sources":["images/test.jpg","components/Header.js","components/main/WorkExperience.js","components/main/Profile.js","components/main/Main.js","components/sidenav/Contact.js","components/sidenav/Education.js","components/sidenav/Skills.js","components/sidenav/SideNav.js","App.js","index.js"],"names":["module","exports","HeaderContainer","styled","div","css","EditButton","FontAwesomeIcon","Wrapper","Name","h1","Ocupation","h3","Form","form","Button","button","Header","props","state","name","getStorage","profession","editName","toggleEditName","bind","handleNameChange","handleProfessionChange","prevState","prevProps","this","setStorage","key","value","localStorage","setItem","JSON","stringify","parse","getItem","e","preventDefault","setState","target","trim","icon","faEdit","onClick","onSubmit","handleSubmit","maxLength","defaultValue","onChange","Component","Container","Job","JobPosition","Company","DateContainer","TextArea","textarea","Title","Text","p","WorkExperience","jobPosition","jobCompany","jobDateStart","jobDateEnd","jobText","jobEditToggle","handleJobEditToggle","handleJobSubmitForm","text","placeholder","handleJobPositionChange","handleJobCompanyChange","type","handleJobDateStartChange","handleJobDateEndChange","handleJobTextChange","Profile","profileText","profileEditToggle","handleProfileEditToggle","handleProfileSubmitForm","handleProfileChange","Main","Widget","List","ul","Contact","email","phone","github","contactEdit","sumbitContactForm","toggleContactEdit","newValue","changeEmail","changePhone","changeGithub","faAt","faPhone","faGithub","Education","location","dateStart","dateEnd","title","educationEdit","sumbitEducationForm","toggleEducationEdit","changeLocation","changeDateStart","changeDateEnd","changeTitle","Skills","arraySkills","skillEdit","newSkillInput","sumbitSkillsForm","toggleSkillEdit","deleteSkill","handleChangeNewSkill","addSkill","filter","skill","newSkill","uniqid","length","map","SideNav","BackgroundImage","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd107696.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/test.9ae837bd.jpg\";","import React, { Component } from 'react'\nimport  tw, { styled, css } from 'twin.macro';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit } from '@fortawesome/free-solid-svg-icons'\n\nconst HeaderContainer = styled.div([\n    css ` \n        position:relative;\n        font-family: 'Roboto', sans-serif;\n        background: rgb(255,255,255);\n        background: linear-gradient(170deg, rgba(255,255,255,1) 0%, rgba(251,251,251,1) 57%, rgba(189,189,189,1) 58%, rgba(189,189,189,1) 100%);\n    `,\n    tw `container bg-gray-500 col-start-1 col-end-4 text-center rounded-t-sm flex flex-col justify-center items-start`\n])\n\nconst EditButton = styled(FontAwesomeIcon) ([\n    tw `hover:cursor-pointer transition transform hover:scale-150`\n])\n\nconst Wrapper = styled.div (\n    tw `flex`\n)\n\nconst Name = styled.h1 ([\n    tw `text-4xl pl-5 tracking-wider break-all`\n])\n\nconst Ocupation = styled.h3 ([\n    tw `pl-5 font-light text-xl break-all`\n])\n\nconst Form = styled.form ([\n    css ` \n        font-family: 'Roboto', sans-serif;\n        position: absolute;\n        top: 35vh;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        z-index:1;\n        @media (min-width: 600px) {\n            top: 25vh;\n        }\n        @media (max-width: 320px) {\n            top: 50vh;\n        }\n    `,\n    tw `text-center flex flex-col bg-gray-400 p-2 rounded-sm shadow-md`\n])\n\nconst Button = styled.button ([\n    tw `bg-green-500 hover:bg-green-700 text-white mt-2 font-bold py-2 px-2 border border-green-700 rounded self-center`\n])\n\nclass Header extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: this.getStorage('header_name') || '',\n            profession: this.getStorage('header_profession') || '',\n            editName: false\n        }\n        this.toggleEditName = this.toggleEditName.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.handleProfessionChange = this.handleProfessionChange.bind(this);\n    }\n\n    componentDidUpdate(prevState, prevProps) {\n        if (this.state.name !== prevState.name) {\n            this.setStorage('header_name', this.state.name)\n        }\n        if (this.state.profession !== prevState.profession) {\n            this.setStorage('header_profession', this.state.profession)\n        }\n    }\n\n    setStorage(key,value){\n        localStorage.setItem(key,JSON.stringify(value));\n    }\n\n    getStorage(key) {\n        return JSON.parse(localStorage.getItem(key))\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.toggleEditName();\n    }\n\n    toggleEditName() {\n        this.setState(prevState => ({\n            editName: !prevState.editName\n        }));\n    }\n\n    handleNameChange(e) {\n        this.setState( {name: e.target.value.trim()} )\n    }\n\n    handleProfessionChange(e) {\n        this.setState( {profession: e.target.value.trim()} )\n    }\n\n    render(){\n        const {name, profession, editName} = this.state;\n\n        return(\n            <HeaderContainer>\n                <Wrapper>\n                    <Name>{name ? name : 'Your name'}</Name>\n                    <EditButton\n                        icon={faEdit}\n                        onClick={this.toggleEditName}\n                    />\n                    {editName &&\n                        <Form onSubmit={ (e) => this.handleSubmit(e) }>\n                            <label>Name</label>\n                            <input\n                                maxLength=\"25\"\n                                defaultValue= {name}\n                                onChange={ (e) => this.handleNameChange(e) }\n                            ></input>\n                            <label>Profession</label>\n                            <input\n                                maxLength=\"20\"\n                                defaultValue= {profession}\n                                onChange={(e) => this.handleProfessionChange(e) }\n                            ></input>\n                            <Button>End edit</Button>\n                        </Form> \n                    }\n                </Wrapper>\n                <Ocupation>{profession ? profession : 'Your profession'}</Ocupation>\n            </HeaderContainer>\n        )\n    }\n\n}\n\nexport default Header","import React,{Component} from 'react'\nimport  tw, { styled, css } from 'twin.macro';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\nconst Container = styled.div ([\n    css `\n        position:relative;\n        margin:5px;\n    `,\n    tw `ml-6 mr-6 mt-4 pb-4 relative`\n])\n\nconst Job = styled.div ([\n    css `\n        border-bottom:1px solid gray;\n        margin:5px;\n    `,\n    tw `flex flex-col pb-4 relative`\n])\n\nconst JobPosition = styled.h3 ([\n    css `WORD-BREAK: break-all;`,\n    tw `mb-1 mt-2`\n])\n\nconst Company = styled.h3 ([\n    css `WORD-BREAK: break-all;`,\n    tw `mb-1 mt-2`\n])\n\nconst DateContainer = styled.h3 ([\n    tw `mb-3 mt-2 flex `\n])\n\nconst EditButton = styled(FontAwesomeIcon) ([\n    css ` position:absolute;\n        top:0;\n        right:0;\n    `,\n    tw `hover:cursor-pointer transition transform hover:scale-150 `\n])\n\nconst Form = styled.form ([\n    css ` \n        font-family: 'Roboto', sans-serif;\n        position: absolute;\n        left:0;\n        z-index:1;\n    `,\n    tw `text-center flex flex-col bg-gray-400 p-1 md:p-3 rounded-sm shadow-md`\n])\n\nconst Button = styled.button ([\n    tw `bg-green-500 hover:bg-green-700 text-white mt-2 font-bold py-2 px-2 border border-green-700 rounded self-center`\n])\n\nconst TextArea = styled.textarea ([\n    css `max-height:200px`\n\n])\n\nconst Title = styled.h3 ([\n    tw `mb-2 mr-5 text-xl tracking-wider`\n])\n\nconst Text = styled.p ([\n    css `WORD-BREAK: break-all;`,\n    tw `font-light text-sm italic text-justify ml-2`\n])\n\nclass WorkExperience extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            jobPosition: this.getStorage('work_position') || '',\n            jobCompany: this.getStorage('work_company') || '',\n            jobDateStart: this.getStorage('work_date_start') || '',\n            jobDateEnd: this.getStorage('work_date_end') || '',\n            jobText: this.getStorage('work_text') || '',\n            jobEditToggle: false\n        }\n\n        this.handleJobEditToggle = this.handleJobEditToggle.bind(this);\n        this.handleJobSubmitForm = this.handleJobSubmitForm.bind(this);\n    }\n\n    componentDidUpdate(prevState) {\n        if(this.state.jobPosition !== prevState.jobPosition) {\n            this.setStorage('work_position', this.state.jobPosition)\n        }\n\n        if(this.state.jobCompany !== prevState.jobCompany) {\n            this.setStorage('work_company', this.state.jobCompany)\n        }\n\n        if(this.state.jobDateStart !== prevState.jobDateStart) {\n            this.setStorage('work_date_start', this.state.jobDateStart)\n        }\n\n        if(this.state.jobDateEnd !== prevState.jobDateEnd) {\n            this.setStorage('work_date_end', this.state.jobDateEnd)\n        }\n\n        if(this.state.jobText !== prevState.jobText) {\n            this.setStorage('work_text', this.state.jobText)\n        }\n    }\n\n    setStorage(key, value) {\n        localStorage.setItem(key, JSON.stringify(value))\n    }\n\n    getStorage(key) {\n        return JSON.parse(localStorage.getItem(key))\n    }\n\n\n    handleJobPositionChange(e) {\n        const text = e.target.value\n        this.setState({ jobPosition: text })\n    }\n\n    handleJobCompanyChange(e) {\n        const text = e.target.value\n        this.setState({ jobCompany: text })\n    }\n\n    handleJobDateStartChange(e) {\n        const value = e.target.value\n        this.setState({ jobDateStart: value })\n    }\n\n    handleJobDateEndChange(e) {\n        const value = e.target.value\n        this.setState({ jobDateEnd: value })\n    }\n\n    handleJobTextChange(e) {\n        const text = e.target.value\n        this.setState({ jobText: text })\n    }\n\n    handleJobEditToggle() {\n        this.setState(prevState => ({\n            jobEditToggle: !prevState.jobEditToggle\n        }));\n    }\n\n    handleJobSubmitForm(e) {\n        e.preventDefault();\n        this.handleJobEditToggle();\n    }\n\n    render() {\n        const{ jobPosition, jobCompany, jobDateStart, jobDateEnd, jobText, jobEditToggle } = this.state\n\n        return( \n            <Container>\n                <Title>WORK EXPERIENCE</Title>\n                <EditButton\n                    icon={faEdit}\n                    onClick={this.handleJobEditToggle}\n                />\n                <Job>\n                    <JobPosition>Position: {jobPosition ? jobPosition : 'Enter your position in the job'}</JobPosition>\n                    <Company>Company: {jobCompany ? jobCompany : 'Name of the company you worked for'}</Company>\n                    <DateContainer> Date: {jobDateStart ? jobDateStart : 'date'} / \n                    {jobDateEnd ? jobDateEnd : 'date'} </DateContainer>\n                    <Text>{jobText ? jobText : 'Please enter what you want to share about that job'}</Text>\n\n                {jobEditToggle &&\n                    <Form onSubmit={this.handleJobSubmitForm}>\n                        <label>Position</label>\n                        <input\n                            maxLength=\"20\"\n                            placeholder='Position'\n                            defaultValue={jobPosition}\n                            onChange={(e) => this.handleJobPositionChange(e)}\n                        ></input>\n                        <label>Company</label>\n                        <input\n                            maxLength=\"20\"\n                            placeholder='Company'\n                            defaultValue={jobCompany}\n                            onChange={(e) => this.handleJobCompanyChange(e)}\n                        ></input>\n                        <label>Date Start</label>\n                        <input\n                            type=\"month\"\n                            defaultValue={jobDateStart}\n                            onChange={(e) => this.handleJobDateStartChange(e)}\n                        ></input>\n                        <label>Date End</label>\n                        <input\n                            type=\"month\"\n                            defaultValue={jobDateEnd}\n                            onChange={(e) => this.handleJobDateEndChange(e)}\n                        ></input>\n                        <label>Info about the job</label>\n                        <TextArea\n                            maxLength=\"200\"\n                            defaultValue= {jobText}\n                            onChange= {(e) => this.handleJobTextChange(e)}\n                        ></TextArea>\n                        <Button>End edit</Button>\n                    </Form>\n                }\n                </Job>\n            </Container>\n        )\n    }\n}\n\nexport default WorkExperience","import React, { Component } from 'react'\nimport  tw, { styled, css } from 'twin.macro';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\nconst Container = styled.div ([\n    css `\n        border-bottom:1px solid gray;\n        margin:5px;\n    `,\n    tw `ml-6 mr-6 mt-4 pb-4 relative`\n])\n\nconst Text = styled.p ([\n    css `WORD-BREAK: break-all;`,\n    tw `font-light text-sm italic text-justify ml-2`\n])\n\nconst Title = styled.h3 ([\n    tw `mb-2 mr-5 text-xl tracking-wider`\n])\n\nconst EditButton = styled(FontAwesomeIcon) ([\n    css ` position:absolute;\n        top:0;\n        right:0;\n    `,\n    tw `hover:cursor-pointer transition transform hover:scale-150 `\n])\n\nconst Form = styled.form ([\n    css ` \n        font-family: 'Roboto', sans-serif;\n        position: absolute;\n        z-index:1;\n    `,\n    tw `text-center flex flex-col bg-gray-400 p-2 rounded-sm shadow-md`\n])\n\nconst Button = styled.button ([\n    tw `bg-green-500 hover:bg-green-700 text-white mt-2 font-bold py-2 px-2 border border-green-700 rounded self-center`\n])\n\nconst TextArea = styled.textarea ([\n    css `max-height:200px`\n\n])\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            profileText: this.getStorage('profile_text') || '',\n            profileEditToggle: false,\n        }\n\n        this.handleProfileEditToggle = this.handleProfileEditToggle.bind(this);\n        this.handleProfileSubmitForm = this.handleProfileSubmitForm.bind(this);\n        this.handleProfileChange = this.handleProfileChange.bind(this);\n    }\n\n    componentDidUpdate(prevState) {\n        if(this.state.profileText !== prevState.profileText) {\n            this.setStorage('profile_text', this.state.profileText)\n        }\n    }\n\n    setStorage(key, value) {\n        localStorage.setItem(key, JSON.stringify(value))\n    }\n\n    getStorage(key) {\n        return JSON.parse(localStorage.getItem(key))\n    }\n\n    handleProfileChange(e) {\n        this.setState({\n            profileText: e.target.value\n        })\n    }\n\n    handleProfileSubmitForm(e) {\n        e.preventDefault();\n        this.handleProfileEditToggle();\n    }\n\n    handleProfileEditToggle() {\n        this.setState(prevState => ({\n            profileEditToggle: !prevState.profileEditToggle\n        }));\n    }\n\n    render(){\n        const {profileText, profileEditToggle} = this.state;\n        \n        return(\n            <Container>\n                <Title>PROFILE</Title>\n                <EditButton\n                    icon={faEdit}\n                    onClick={(e) => {this.handleProfileEditToggle(e)}}\n                />\n                <Text>{profileText ? profileText : 'Please enter info you want to share about you.'}</Text>\n                {profileEditToggle && \n                    <Form onSubmit={this.handleProfileSubmitForm}>\n                        <label>Profile Info</label>\n                        <TextArea\n                            maxLength=\"200\"\n                            defaultValue= {profileText}\n                            onChange= {(e) => this.handleProfileChange(e)}\n                        ></TextArea>\n                        <Button>End edit</Button>\n                    </Form>\n                }\n            </Container>\n        )\n    }\n}\n\nexport default Profile;","import React,{ Component } from \"react\";\nimport  tw, { styled, css } from 'twin.macro';\nimport WorkExperience from './WorkExperience';\nimport Profile from './Profile';\n\nconst Container = styled.div([\n    css ` \n        font-family: 'Roboto', sans-serif;\n    `,\n    tw `container bg-gray-100 rounded-r-sm rounded-t-none\n        col-start-1 col-end-4 row-start-2 row-end-4\n        sm:(col-start-2 col-end-4 row-start-2 row-end-6)\n    `\n])\n\nclass Main extends Component{\n    render() {\n        return(\n            <Container>\n                <Profile/>\n                <WorkExperience/>\n            </Container>\n        )\n    }\n}\n\nexport default Main;","/** @jsx jsx **/\nimport { jsx } from '@emotion/core';\nimport { Component } from 'react'\nimport  tw, { styled, css } from 'twin.macro';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPhone } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faAt } from '@fortawesome/free-solid-svg-icons';\n\nconst Widget = styled.div ([\n    css `\n        display:flex;\n        flex-direction:column;\n        border-bottom:1px solid gray;\n        width:95%;\n        margin: 0 auto;\n    `,\n    tw `mb-3  text-center flex-1 relative`\n])\n\nconst Form = styled.form ([\n    css ` \n        font-family: 'Roboto', sans-serif;\n        position: absolute;\n        left:0;\n        z-index:1;\n        color:black;\n    `,\n    tw `text-center flex flex-col bg-gray-400 p-1 md:p-3 rounded-sm shadow-md`\n])\n\nconst List = styled.ul ([\n    css `\n        flex: 1;\n        display:flex;\n        justify-content: space-between;\n        flex-direction:column;\n        margin-bottom:10px;\n    `,\n    tw `text-sm`\n])\n\nconst EditButton = styled(FontAwesomeIcon) ([\n    tw `absolute right-0 hover:cursor-pointer transition transform hover:scale-150`\n])\n\nconst Button = styled.button ([\n    tw `bg-green-500 hover:bg-green-700 text-white mt-2 font-bold py-2 px-2 border border-green-700 rounded self-center`\n])\n\nconst Title = styled.h3 ([\n    tw `mb-2 text-xl tracking-wider`\n])\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            email:  this.getStorage('contact_email') || '',\n            phone:  this.getStorage('contact_phone') || '',\n            github: this.getStorage('contact_github') || '',\n            contactEdit: false,\n        }\n\n        this.sumbitContactForm = this.sumbitContactForm.bind(this);\n        this.toggleContactEdit = this.toggleContactEdit.bind(this);\n    }\n\n    componentDidUpdate(prevState) {\n        if(this.state.email !== prevState.email) {\n            this.setStorage('contact_email', this.state.email)\n        }\n\n        if(this.state.phone !== prevState.phone) {\n            this.setStorage('contact_phone', this.state.phone)\n        }\n\n        if(this.state.github !== prevState.github) {\n            this.setStorage('contact_github', this.state.github)\n        }\n    }\n\n    setStorage(key, value) {\n        localStorage.setItem(key, JSON.stringify(value))\n    }\n\n    getStorage(key) {\n        return JSON.parse(localStorage.getItem(key))\n    }\n\n    toggleContactEdit() {\n        this.setState( prevState => (\n            { contactEdit: !prevState.contactEdit }\n        ))\n    }\n\n    sumbitContactForm(e) {\n        e.preventDefault();\n        this.toggleContactEdit();\n    }\n\n    changeEmail(e) {\n        const newValue = e.target.value;\n        this.setState( { email: newValue })\n    }\n\n    changePhone(e) {\n        const newValue = e.target.value;\n        this.setState( { phone: newValue } )\n    }\n\n    changeGithub(e) {\n        const newValue = e.target.value;\n        this.setState( { github: newValue } )\n    }\n\n    render() {\n        const { contactEdit, email, phone, github} = this.state\n\n        return(\n            <Widget tw='pt-2'>\n                <Title>CONTACT</Title>\n                {contactEdit &&\n                    <Form onSubmit={(e) => this.sumbitContactForm(e)}>\n                        <label>Email</label>\n                        <input \n                            maxLength='20' \n                            defaultValue={email} \n                            onChange={ (e)=>this.changeEmail(e) } \n                            type='email'\n                        ></input>\n                        <label>Phone</label>\n                        <input \n                            maxLength='15' \n                            defaultValue={phone} \n                            onChange={ (e)=>this.changePhone(e) }    \n                        ></input>\n                        <label>Github Page</label>\n                        <input \n                            maxLength='25' \n                            defaultValue={github} \n                            onChange={ (e)=>this.changeGithub(e) }\n                        ></input>\n\n                        <Button>End edit</Button>\n                    </Form>\n                }\n                    <EditButton \n                        onClick={this.toggleContactEdit}\n                        icon={faEdit}/>\n                <List>\n                    <div>\n                        <FontAwesomeIcon tw='mr-2' icon={faAt}/>\n                        <span>{email ? email : 'Enter your email'}</span>\n                    </div>\n                    <div>\n                        <FontAwesomeIcon tw='mr-2' icon={faPhone}/>\n                        <span>{phone ? phone : 'Enter your phone'} </span>\n                    </div>\n                    <div>\n                        <FontAwesomeIcon tw='mr-2' icon={faGithub}/>\n                        <span>{github ? github : 'github.com/yourpage'}</span>\n                    </div>\n                </List>\n            </Widget>\n        )\n    }\n}\n\nexport default Contact;","/** @jsx jsx **/\nimport { jsx } from '@emotion/core';\nimport { Component } from 'react'\nimport  tw, { styled, css } from 'twin.macro';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit } from '@fortawesome/free-solid-svg-icons'\n\nconst Widget = styled.div ([\n    css `\n        display:flex;\n        flex-direction:column;\n        border-bottom:1px solid gray;\n        width:95%;\n        margin: 0 auto;\n    `,\n    tw `mb-3  text-center flex-1 relative`\n])\n\nconst Form = styled.form ([\n    css ` \n        font-family: 'Roboto', sans-serif;\n        position: absolute;\n        left:0;\n        z-index:1;\n        color:black;\n    `,\n    tw `text-center flex flex-col bg-gray-400 p-1 md:p-3 rounded-sm shadow-md`\n])\n\nconst List = styled.ul ([\n    css `\n        flex: 1;\n        display:flex;\n        justify-content: space-between;\n        flex-direction:column;\n        margin-bottom:10px;\n    `,\n    tw `text-sm`\n])\n\nconst EditButton = styled(FontAwesomeIcon) ([\n    tw `absolute right-0 hover:cursor-pointer transition transform hover:scale-150`\n])\n\nconst Button = styled.button ([\n    tw `bg-green-500 hover:bg-green-700 text-white mt-2 font-bold py-2 px-2 border border-green-700 rounded self-center`\n])\n\nconst Title = styled.h3 ([\n    tw `mb-2 text-xl tracking-wider`\n])\n\nclass Education extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            location: this.getStorage('education_location') || '',\n            dateStart: this.getStorage('education_date_start') || '',\n            dateEnd: this.getStorage('education_date_end') || '',\n            title: this.getStorage('education_title') || '',\n            educationEdit: false,\n        }\n        this.sumbitEducationForm = this.sumbitEducationForm.bind(this);\n        this.toggleEducationEdit = this.toggleEducationEdit.bind(this);\n    }\n\n    componentDidUpdate(prevState) {\n        if(this.state.location !== prevState.location) {\n            this.setStorage('education_location', this.state.location)\n        }\n\n        if(this.state.dateStart !== prevState.dateStart) {\n            this.setStorage('education_date_start', this.state.dateStart)\n        }\n\n        if(this.state.dateEnd !== prevState.dateEnd) {\n            this.setStorage('education_date_end', this.state.dateEnd)\n        }\n\n        if(this.state.title !== prevState.title) {\n            this.setStorage('education_title', this.state.title)\n        }\n    }\n\n    setStorage(key, value) {\n        localStorage.setItem(key, JSON.stringify(value))\n    }\n\n    getStorage(key) {\n        return JSON.parse(localStorage.getItem(key))\n    }\n\n    toggleEducationEdit() {\n        this.setState( prevState => ({\n            educationEdit: !prevState.educationEdit\n        }))\n    }\n\n    sumbitEducationForm(e) {\n        e.preventDefault();\n        this.toggleEducationEdit();\n    }\n\n    changeLocation(e){\n        const newValue = e.target.value;\n        this.setState( {location:newValue} )\n    }\n\n    changeDateStart(e){\n        const newValue = e.target.value;\n        this.setState( {dateStart:newValue} )\n    }\n\n    changeDateEnd(e){\n        const newValue = e.target.value;\n        this.setState( {dateEnd:newValue} )\n    }\n\n    changeTitle(e) {\n        const newValue = e.target.value;\n        this.setState( {title:newValue} )\n    }\n\n    render() {\n        const {educationEdit, location, dateStart, dateEnd, title} = this.state;\n\n        return(\n            <Widget>\n                <Title>EDUCATION</Title>\n                {educationEdit &&\n                    <Form onSubmit={(e) => this.sumbitEducationForm(e)}>\n                        <label>Where did you studied</label>\n                        <input \n                            defaultValue={location}\n                            maxLength='20'\n                            onChange={(e) => this.changeLocation(e)}\n                        ></input>\n                        <label>Date Start</label>\n                        <input \n                            defaultValue={dateStart}\n                            onChange={(e) => this.changeDateStart(e)}\n                            type='month'\n                            ></input>\n                        <label>Date End</label>\n                        <input\n                            defaultValue={dateEnd}\n                            onChange={(e) => this.changeDateEnd(e)}\n                            type='month'\n                        ></input>\n                        <label>Title</label>\n                        <input\n                            defaultValue={title}\n                            maxLength='20'\n                            onChange={(e) => this.changeTitle(e)}\n                        ></input>\n                        <Button>End edit</Button>\n                    </Form>\n                }\n                        <EditButton \n                            onClick={this.toggleEducationEdit}\n                            icon={faEdit}/>\n                    <List>\n                        <li>Studied in: {location ? location : 'Where you studied'}</li>\n                        <li>Date: {dateStart ? dateStart : 'date'} / {dateEnd ? dateEnd : 'date'}</li>\n                        <li>Title: {title ? title : ''}</li>\n                    </List>\n            </Widget>\n        )\n\n    }\n}\n\nexport default Education;","/** @jsx jsx **/\nimport { jsx } from '@emotion/core';\nimport { Component } from 'react'\nimport  tw, { styled, css } from 'twin.macro';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport uniqid from 'uniqid';\n\nconst Title = styled.h3 ([\n    tw `mb-2 text-xl tracking-wider`\n])\n\nconst Widget = styled.div ([\n    css `\n        display:flex;\n        flex-direction:column;\n        border-bottom:1px solid gray;\n        width:95%;\n        margin: 0 auto;\n    `,\n    tw `mb-3  text-center flex-1 relative`\n])\n\nconst List = styled.ul ([\n    css `\n        flex: 1;\n        display:flex;\n        justify-content: space-between;\n        flex-direction:column;\n        margin-bottom:10px;\n    `,\n    tw `text-sm`\n])\n\nconst EditButton = styled(FontAwesomeIcon) ([\n    tw `absolute right-0 hover:cursor-pointer transition transform hover:scale-150`\n])\n\nconst Form = styled.form ([\n    css ` \n        font-family: 'Roboto', sans-serif;\n        position: absolute;\n        left:0;\n        z-index:1;\n        color:black;\n    `,\n    tw `text-center flex flex-col bg-gray-400 p-1 md:p-3 rounded-sm shadow-md`\n])\n\nconst Button = styled.button ([\n    tw `bg-green-500 hover:bg-green-700 text-white mt-2 font-bold py-2 px-2 border border-green-700 rounded self-center`\n])\n\nclass Skills extends Component {\n    constructor(props){\n        super(props)\n        this.state ={\n            arraySkills: this.getStorage('skills_arraySkills') || [],\n            skillEdit:false,\n            newSkillInput: '' \n        }\n        this.sumbitSkillsForm = this.sumbitSkillsForm.bind(this);\n        this.toggleSkillEdit = this.toggleSkillEdit.bind(this);\n        this.deleteSkill = this.deleteSkill.bind(this);\n        this.handleChangeNewSkill = this.handleChangeNewSkill.bind(this);\n        this.addSkill = this.addSkill.bind(this)\n    }\n\n    componentDidUpdate(prevState) {\n        if(this.state.arraySkills !== prevState.arraySkills) {\n            this.setStorage('skills_arraySkills', this.state.arraySkills)\n        }\n    }\n\n    setStorage(key, value) {\n        localStorage.setItem(key, JSON.stringify(value))\n    }\n\n    getStorage(key) {\n        return JSON.parse(localStorage.getItem(key))\n    }\n\n    toggleSkillEdit(){\n        this.setState( prevState => ({\n            skillEdit: !prevState.skillEdit\n        }))\n    }\n\n    sumbitSkillsForm(e){\n        e.preventDefault();\n        this.toggleSkillEdit();\n    }\n\n    deleteSkill(key) {\n        this.setState({\n            arraySkills: [...this.state.arraySkills.filter( skill =>\n            skill.key !== key)]\n        })\n    }\n\n    handleChangeNewSkill(e) {\n        this.setState({newSkillInput: e.target.value})\n    }\n\n    addSkill(){\n        const newSkill = {\n            skill: this.state.newSkillInput,\n            key: uniqid()\n        }\n\n        this.setState( prevState => ({\n            arraySkills: [...prevState.arraySkills, newSkill],\n            newSkillInput:''\n        }))\n    }\n\n    render() {\n        const { skillEdit, arraySkills, newSkillInput} = this.state\n\n        return(\n            <Widget tw='border-none mb-0'>\n                <Title>SKILLS</Title>\n                {skillEdit &&\n                    <Form onSubmit={(e) => this.sumbitSkillsForm(e)}>\n                        <label>Add a skill</label>\n                        <input\n                            maxLength='15'\n                            value={newSkillInput}\n                            onChange={(e) => this.handleChangeNewSkill(e)}\n                        ></input>\n                        <button \n                            type='button'\n                            onClick={this.addSkill}\n                            tw='bg-red-400 self-center rounded mb-5 mt-2 px-2 py-1 hover:bg-red-600 border border-red-600'\n                        >Send</button>\n                        {arraySkills.length > 0 &&\n                        <div>\n                            <label>Remove a Skill</label>\n                            <div css={css(css `overflow: auto; max-height:200px`)}>\n                                {arraySkills.map( skill => (\n                                    <div tw='bg-gray-200 border-blue-200 border-solid border-4 flex justify-around' key={skill.key + 'container'}>\n                                    <span key={skill.key}> {skill.skill}</span>\n                                    <button\n                                        tw='bg-red-400 rounded px-2 text-lg'\n                                        onClick={() => this.deleteSkill(skill.key)}\n                                        key={skill.key + 'button'}>×</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        }\n                        <Button type='submit'>End edit</Button>\n                    </Form>\n                }\n                <EditButton \n                    onClick={this.toggleSkillEdit}\n                    icon={faEdit}/>\n                <List>\n                    {arraySkills.length > 0 ? \n                    arraySkills.map( skill => (\n                        <li key={skill.key}>{skill.skill}</li>\n                    )) : <p>Add skills please</p>}\n                </List>\n            </Widget>\n        )\n    }\n}\n\nexport default Skills;","/** @jsx jsx **/\nimport { jsx } from '@emotion/core';\nimport { Component } from 'react'\nimport  tw, { styled, css } from 'twin.macro';\nimport Contact from './Contact'\nimport Education from './Education'\nimport Skills from './Skills'\n\nconst Container = styled.div([\n    css ` \n        font-family: 'Roboto', sans-serif;\n        background-color: #414143;\n    `,\n    tw `container rounded-l-sm rounded-t-none text-white flex flex-col\n        col-start-1 col-end-4 \n        sm:(row-start-2 row-end-6) sm:(col-start-1 col-end-2)\n    `\n])\n\nclass SideNav extends Component {\n    render() {\n        return(\n            <Container>\n                <Contact />\n                <Education />\n                <Skills />\n            </Container>\n        )\n    }\n}\n\nexport default SideNav;","import React from \"react\"\nimport tw, { styled, css } from 'twin.macro';\nimport BackgroundImage from './images/test.jpg';\nimport Header from './components/Header';\nimport Body from './components/main/Main';\nimport SideNav from \"./components/sidenav/SideNav\";\n\nconst Container = styled.div([\n  css `\n    background-color:#eee;\n    background-image: url(${BackgroundImage});\n    background-repeat: no-repeat;\n    background-attachment: fixed;\n    background-size: cover;\n    background-position: center left;\n    min-height: 100vh;\n    @media (max-width: 640px) {\n      background-image:none;\n    }\n  `,\n  tw `flex items-center`\n])\n\nconst Wrapper = styled.div([\n  css `\n    min-height: 98vh;\n    max-width: 100vw;\n    box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);\n    @media (max-width: 640px) {\n      min-height: 100vh;\n    }\n  `,\n  tw `container mx-auto rounded grid relative\n      grid-rows-3 grid-cols-3\n      sm:(grid-rows-5 grid-cols-3)\n      md:w-3/4 \n      lg:w-3/4 \n      xl:w-1/2`\n])\n\nfunction App() {\n  return (\n    <Container>\n      <Wrapper>\n          <Header />\n          <Body />\n          <SideNav />\n      </Wrapper>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'tailwindcss/dist/base.min.css';\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}