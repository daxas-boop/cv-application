{"version":3,"sources":["images/test.jpg","components/Header.js","components/main/WorkExperience.js","components/main/Profile.js","components/main/Main.js","components/sidenav/Contact.js","components/sidenav/Education.js","components/sidenav/Skills.js","components/sidenav/SideNav.js","App.js","index.js"],"names":["module","exports","HeaderContainer","styled","div","css","EditButton","FontAwesomeIcon","Wrapper","Name","h1","Ocupation","h3","Form","form","Button","button","Header","props","state","name","profession","editName","toggleEditName","bind","handleNameChange","handleProfessionChange","e","preventDefault","this","setState","prevState","target","value","trim","icon","faEdit","onClick","onSubmit","handleSubmit","maxLength","defaultValue","onChange","Component","Container","Job","JobPosition","Company","DateContainer","TextArea","textarea","Title","Text","p","WorkExperience","jobEditToggle","jobPosition","jobCompany","jobDateStart","jobDateEnd","jobText","handleJobEditToggle","handleJobSubmitForm","text","placeholder","handleJobPositionChange","handleJobCompanyChange","type","handleJobDateStartChange","handleJobDateEndChange","handleJobTextChange","Profile","profileText","profileEditToggle","handleProfileEditToggle","handleProfileSubmitForm","handleProfileChange","Main","Widget","List","ul","Contact","contact","email","phone","github","contactEdit","sumbitContactForm","toggleContactEdit","newValue","changeEmail","changePhone","changeGithub","faAt","faPhone","faGithub","Education","education","location","dateStart","dateEnd","title","educationEdit","sumbitEducationForm","toggleEducationEdit","changeLocation","changeDateStart","changeDateEnd","changeTitle","Skills","arraySkills","skillEdit","newSkillInput","sumbitSkillsForm","toggleSkillEdit","deleteSkill","handleChangeNewSkill","addSkill","key","filter","skill","newSkill","uniqid","length","map","SideNav","BackgroundImage","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9568137.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/test.9ae837bd.jpg\";","import React, { Component } from 'react'\nimport  tw, { styled, css } from 'twin.macro';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit } from '@fortawesome/free-solid-svg-icons'\n\nconst HeaderContainer = styled.div([\n    css ` \n        position:relative;\n        font-family: 'Roboto', sans-serif;\n        background: rgb(255,255,255);\n        background: linear-gradient(170deg, rgba(255,255,255,1) 0%, rgba(251,251,251,1) 57%, rgba(189,189,189,1) 58%, rgba(189,189,189,1) 100%);\n    `,\n    tw `container bg-gray-500 col-start-1 col-end-4 text-center rounded-t-sm flex flex-col justify-center items-start`\n])\n\nconst EditButton = styled(FontAwesomeIcon) ([\n    tw `hover:cursor-pointer transition transform hover:scale-150`\n])\n\nconst Wrapper = styled.div (\n    tw `flex`\n)\n\nconst Name = styled.h1 ([\n    tw `text-4xl pl-5 tracking-wider break-all`\n])\n\nconst Ocupation = styled.h3 ([\n    tw `pl-5 font-light text-xl break-all`\n])\n\nconst Form = styled.form ([\n    css ` \n        font-family: 'Roboto', sans-serif;\n        position: absolute;\n        top: 35vh;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        z-index:1;\n        @media (min-width: 600px) {\n            top: 25vh;\n        }\n        @media (max-width: 320px) {\n            top: 50vh;\n        }\n    `,\n    tw `text-center flex flex-col bg-gray-400 p-2 rounded-sm shadow-md`\n])\n\nconst Button = styled.button ([\n    tw `bg-green-500 hover:bg-green-700 text-white mt-2 font-bold py-2 px-2 border border-green-700 rounded self-center`\n])\n\nclass Header extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            profession: '',\n            editName: false\n        }\n\n        this.toggleEditName = this.toggleEditName.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.handleProfessionChange = this.handleProfessionChange.bind(this);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.toggleEditName();\n    }\n\n    toggleEditName() {\n        this.setState(prevState => ({\n            editName: !prevState.editName\n        }));\n    }\n\n    handleNameChange(e) {\n        this.setState( {name: e.target.value.trim()} )\n    }\n\n    handleProfessionChange(e) {\n        this.setState( {profession: e.target.value.trim()} )\n    }\n\n    render(){\n        const {name, profession, editName} = this.state;\n\n        return(\n            <HeaderContainer>\n                <Wrapper>\n                    <Name>{name ? name : 'Your name'}</Name>\n                    <EditButton\n                        icon={faEdit}\n                        onClick={this.toggleEditName}\n                    />\n                    {editName &&\n                        <Form onSubmit={ (e) => this.handleSubmit(e) }>\n                            <label>Name</label>\n                            <input\n                                maxLength=\"25\"\n                                defaultValue= {name}\n                                onChange={ (e) => this.handleNameChange(e) }\n                            ></input>\n                            <label>Profession</label>\n                            <input\n                                maxLength=\"20\"\n                                defaultValue= {profession}\n                                onChange={(e) => this.handleProfessionChange(e) }\n                            ></input>\n                            <Button>End edit</Button>\n                        </Form> \n                    }\n                </Wrapper>\n                <Ocupation>{profession ? profession : 'Your profession'}</Ocupation>\n            </HeaderContainer>\n        )\n    }\n\n}\n\nexport default Header","import React,{Component} from 'react'\nimport  tw, { styled, css } from 'twin.macro';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\nconst Container = styled.div ([\n    css `\n        position:relative;\n        margin:5px;\n    `,\n    tw `ml-6 mr-6 mt-4 pb-4 relative`\n])\n\nconst Job = styled.div ([\n    css `\n        border-bottom:1px solid gray;\n        margin:5px;\n    `,\n    tw `flex flex-col pb-4 relative`\n])\n\nconst JobPosition = styled.h3 ([\n    css `WORD-BREAK: break-all;`,\n    tw `mb-1 mt-2`\n])\n\nconst Company = styled.h3 ([\n    css `WORD-BREAK: break-all;`,\n    tw `mb-1 mt-2`\n])\n\nconst DateContainer = styled.h3 ([\n    tw `mb-3 mt-2 flex `\n])\n\nconst EditButton = styled(FontAwesomeIcon) ([\n    css ` position:absolute;\n        top:0;\n        right:0;\n    `,\n    tw `hover:cursor-pointer transition transform hover:scale-150 `\n])\n\nconst Form = styled.form ([\n    css ` \n        font-family: 'Roboto', sans-serif;\n        position: absolute;\n        left:0;\n        z-index:1;\n    `,\n    tw `text-center flex flex-col bg-gray-400 p-1 md:p-3 rounded-sm shadow-md`\n])\n\nconst Button = styled.button ([\n    tw `bg-green-500 hover:bg-green-700 text-white mt-2 font-bold py-2 px-2 border border-green-700 rounded self-center`\n])\n\nconst TextArea = styled.textarea ([\n    css `max-height:200px`\n\n])\n\nconst Title = styled.h3 ([\n    tw `mb-2 mr-5 text-xl tracking-wider`\n])\n\nconst Text = styled.p ([\n    css `WORD-BREAK: break-all;`,\n    tw `font-light text-sm italic text-justify ml-2`\n])\n\nclass WorkExperience extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            jobEditToggle: false,\n            jobPosition: '',\n            jobCompany: '',\n            jobDateStart:'',\n            jobDateEnd: '',\n            jobText: '',\n        }\n\n        this.handleJobEditToggle = this.handleJobEditToggle.bind(this);\n        this.handleJobSubmitForm = this.handleJobSubmitForm.bind(this);\n    }\n\n\n    handleJobPositionChange(e) {\n        const text = e.target.value\n        this.setState({ jobPosition: text })\n    }\n\n    handleJobCompanyChange(e) {\n        const text = e.target.value\n        this.setState({ jobCompany: text })\n    }\n\n    handleJobDateStartChange(e) {\n        const value = e.target.value\n        this.setState({ jobDateStart: value })\n    }\n\n    handleJobDateEndChange(e) {\n        const value = e.target.value\n        this.setState({ jobDateEnd: value })\n    }\n\n    handleJobTextChange(e) {\n        const text = e.target.value\n        this.setState({ jobText: text })\n    }\n\n    handleJobEditToggle() {\n        this.setState(prevState => ({\n            jobEditToggle: !prevState.jobEditToggle\n        }));\n    }\n\n    handleJobSubmitForm(e) {\n        e.preventDefault();\n        this.handleJobEditToggle();\n    }\n\n    render() {\n        const{ jobPosition, jobCompany, jobDateStart, jobDateEnd, jobText, jobEditToggle } = this.state\n\n        return( \n            <Container>\n                <Title>WORK EXPERIENCE</Title>\n                <EditButton\n                    icon={faEdit}\n                    onClick={this.handleJobEditToggle}\n                />\n                <Job>\n                    <JobPosition>Position: {jobPosition ? jobPosition : 'Enter your position in the job'}</JobPosition>\n                    <Company>Company: {jobCompany ? jobCompany : 'Name of the company you worked for'}</Company>\n                    <DateContainer> Date: {jobDateStart ? jobDateStart : 'date'} / \n                    {jobDateEnd ? jobDateEnd : 'date'} </DateContainer>\n                    <Text>{jobText ? jobText : 'Please enter what you want to share about that job'}</Text>\n\n                {jobEditToggle &&\n                    <Form onSubmit={this.handleJobSubmitForm}>\n                        <label>Position</label>\n                        <input\n                            maxLength=\"20\"\n                            placeholder='Position'\n                            defaultValue={jobPosition}\n                            onChange={(e) => this.handleJobPositionChange(e)}\n                        ></input>\n                        <label>Company</label>\n                        <input\n                            maxLength=\"20\"\n                            placeholder='Company'\n                            defaultValue={jobCompany}\n                            onChange={(e) => this.handleJobCompanyChange(e)}\n                        ></input>\n                        <label>Date Start</label>\n                        <input\n                            type=\"month\"\n                            defaultValue={jobDateStart}\n                            onChange={(e) => this.handleJobDateStartChange(e)}\n                        ></input>\n                        <label>Date End</label>\n                        <input\n                            type=\"month\"\n                            defaultValue={jobDateEnd}\n                            onChange={(e) => this.handleJobDateEndChange(e)}\n                        ></input>\n                        <label>Info about the job</label>\n                        <TextArea\n                            maxLength=\"200\"\n                            defaultValue= {jobText}\n                            onChange= {(e) => this.handleJobTextChange(e)}\n                        ></TextArea>\n                        <Button>End edit</Button>\n                    </Form>\n                }\n                </Job>\n            </Container>\n        )\n    }\n}\n\nexport default WorkExperience","import React, { Component } from 'react'\nimport  tw, { styled, css } from 'twin.macro';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\nconst Container = styled.div ([\n    css `\n        border-bottom:1px solid gray;\n        margin:5px;\n    `,\n    tw `ml-6 mr-6 mt-4 pb-4 relative`\n])\n\nconst Text = styled.p ([\n    css `WORD-BREAK: break-all;`,\n    tw `font-light text-sm italic text-justify ml-2`\n])\n\nconst Title = styled.h3 ([\n    tw `mb-2 mr-5 text-xl tracking-wider`\n])\n\nconst EditButton = styled(FontAwesomeIcon) ([\n    css ` position:absolute;\n        top:0;\n        right:0;\n    `,\n    tw `hover:cursor-pointer transition transform hover:scale-150 `\n])\n\nconst Form = styled.form ([\n    css ` \n        font-family: 'Roboto', sans-serif;\n        position: absolute;\n        z-index:1;\n    `,\n    tw `text-center flex flex-col bg-gray-400 p-2 rounded-sm shadow-md`\n])\n\nconst Button = styled.button ([\n    tw `bg-green-500 hover:bg-green-700 text-white mt-2 font-bold py-2 px-2 border border-green-700 rounded self-center`\n])\n\nconst TextArea = styled.textarea ([\n    css `max-height:200px`\n\n])\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            profileText: '',\n            profileEditToggle: false,\n        }\n\n        this.handleProfileEditToggle = this.handleProfileEditToggle.bind(this);\n        this.handleProfileSubmitForm = this.handleProfileSubmitForm.bind(this);\n        this.handleProfileChange = this.handleProfileChange.bind(this);\n    }\n\n    handleProfileChange(e) {\n        this.setState({\n            profileText: e.target.value\n        })\n    }\n\n    handleProfileSubmitForm(e) {\n        e.preventDefault();\n        this.handleProfileEditToggle();\n    }\n\n    handleProfileEditToggle() {\n        this.setState(prevState => ({\n            profileEditToggle: !prevState.profileEditToggle\n        }));\n    }\n\n    render(){\n        const {profileText, profileEditToggle} = this.state;\n        \n        return(\n            <Container>\n                <Title>PROFILE</Title>\n                <EditButton\n                    icon={faEdit}\n                    onClick={(e) => {this.handleProfileEditToggle(e)}}\n                />\n                <Text>{profileText ? profileText : 'Please enter info you want to share about you.'}</Text>\n                {profileEditToggle && \n                    <Form onSubmit={this.handleProfileSubmitForm}>\n                        <label>Profile Info</label>\n                        <TextArea\n                            maxLength=\"200\"\n                            defaultValue= {profileText}\n                            onChange= {(e) => this.handleProfileChange(e)}\n                        ></TextArea>\n                        <Button>End edit</Button>\n                    </Form>\n                }\n            </Container>\n        )\n    }\n}\n\nexport default Profile;","import React,{ Component } from \"react\";\nimport  tw, { styled, css } from 'twin.macro';\nimport WorkExperience from './WorkExperience';\nimport Profile from './Profile';\n\nconst Container = styled.div([\n    css ` \n        font-family: 'Roboto', sans-serif;\n    `,\n    tw `container bg-gray-100 rounded-r-sm rounded-t-none\n        col-start-1 col-end-4 row-start-2 row-end-4\n        sm:(col-start-2 col-end-4 row-start-2 row-end-6)\n    `\n])\n\nclass Main extends Component{\n    render() {\n        return(\n            <Container>\n                <Profile/>\n                <WorkExperience/>\n            </Container>\n        )\n    }\n}\n\nexport default Main;","/** @jsx jsx **/\nimport { jsx } from '@emotion/core';\nimport { Component } from 'react'\nimport  tw, { styled, css } from 'twin.macro';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPhone } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faAt } from '@fortawesome/free-solid-svg-icons';\n\nconst Widget = styled.div ([\n    css `\n        display:flex;\n        flex-direction:column;\n        border-bottom:1px solid gray;\n        width:95%;\n        margin: 0 auto;\n    `,\n    tw `mb-3  text-center flex-1 relative`\n])\n\nconst Form = styled.form ([\n    css ` \n        font-family: 'Roboto', sans-serif;\n        position: absolute;\n        left:0;\n        z-index:1;\n        color:black;\n    `,\n    tw `text-center flex flex-col bg-gray-400 p-1 md:p-3 rounded-sm shadow-md`\n])\n\nconst List = styled.ul ([\n    css `\n        flex: 1;\n        display:flex;\n        justify-content: space-between;\n        flex-direction:column;\n        margin-bottom:10px;\n    `,\n    tw `text-sm`\n])\n\nconst EditButton = styled(FontAwesomeIcon) ([\n    tw `absolute right-0 hover:cursor-pointer transition transform hover:scale-150`\n])\n\nconst Button = styled.button ([\n    tw `bg-green-500 hover:bg-green-700 text-white mt-2 font-bold py-2 px-2 border border-green-700 rounded self-center`\n])\n\nconst Title = styled.h3 ([\n    tw `mb-2 text-xl tracking-wider`\n])\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            contact: {\n                email:'',\n                phone:'',\n                github:'',\n                contactEdit: false,\n            },\n        }\n\n        this.sumbitContactForm = this.sumbitContactForm.bind(this);\n        this.toggleContactEdit = this.toggleContactEdit.bind(this);\n    }\n\n    toggleContactEdit() {\n        this.setState( prevState => ({\n            contact: {\n                ...prevState.contact,\n                contactEdit: !prevState.contact.contactEdit\n            }\n        }))\n    }\n\n    sumbitContactForm(e) {\n        e.preventDefault();\n        this.toggleContactEdit();\n    }\n\n    changeEmail(e) {\n        const newValue = e.target.value;\n        this.setState( prevState => ({\n                contact: {\n                    ...prevState.contact,\n                    email: newValue\n                }\n            }))\n    }\n\n    changePhone(e) {\n        const newValue = e.target.value;\n        this.setState( prevState => ({\n                contact: {\n                    ...prevState.contact,\n                    phone: newValue\n                }\n            }))\n    }\n\n    changeGithub(e) {\n        const newValue = e.target.value;\n        this.setState( prevState => ({\n                contact: {\n                    ...prevState.contact,\n                    github: newValue\n                }\n            }))\n    }\n\n    render() {\n        const { contact: {contactEdit, email, phone, github} }= this.state\n\n        return(\n            <Widget tw='pt-2'>\n                <Title>CONTACT</Title>\n                {contactEdit &&\n                    <Form onSubmit={(e) => this.sumbitContactForm(e)}>\n                        <label>Email</label>\n                        <input \n                            maxLength='20' \n                            defaultValue={email} \n                            onChange={ (e)=>this.changeEmail(e) } \n                            type='email'\n                        ></input>\n                        <label>Phone</label>\n                        <input \n                            maxLength='15' \n                            defaultValue={phone} \n                            onChange={ (e)=>this.changePhone(e) }    \n                        ></input>\n                        <label>Github Page</label>\n                        <input \n                            maxLength='15' \n                            defaultValue={github} \n                            onChange={ (e)=>this.changeGithub(e) }\n                        ></input>\n\n                        <Button>End edit</Button>\n                    </Form>\n                }\n                    <EditButton \n                        onClick={this.toggleContactEdit}\n                        icon={faEdit}/>\n                <List>\n                    <div>\n                        <FontAwesomeIcon tw='mr-2' icon={faAt}/>\n                        <span>{email ? email : 'Enter your email'}</span>\n                    </div>\n                    <div>\n                        <FontAwesomeIcon tw='mr-2' icon={faPhone}/>\n                        <span>{phone ? phone : 'Enter your phone'} </span>\n                    </div>\n                    <div>\n                        <FontAwesomeIcon tw='mr-2' icon={faGithub}/>\n                        <span>{github ? github : 'github.com/yourpage'}</span>\n                    </div>\n                </List>\n            </Widget>\n        )\n    }\n}\n\nexport default Contact;","/** @jsx jsx **/\nimport { jsx } from '@emotion/core';\nimport { Component } from 'react'\nimport  tw, { styled, css } from 'twin.macro';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit } from '@fortawesome/free-solid-svg-icons'\n\nconst Widget = styled.div ([\n    css `\n        display:flex;\n        flex-direction:column;\n        border-bottom:1px solid gray;\n        width:95%;\n        margin: 0 auto;\n    `,\n    tw `mb-3  text-center flex-1 relative`\n])\n\nconst Form = styled.form ([\n    css ` \n        font-family: 'Roboto', sans-serif;\n        position: absolute;\n        left:0;\n        z-index:1;\n        color:black;\n    `,\n    tw `text-center flex flex-col bg-gray-400 p-1 md:p-3 rounded-sm shadow-md`\n])\n\nconst List = styled.ul ([\n    css `\n        flex: 1;\n        display:flex;\n        justify-content: space-between;\n        flex-direction:column;\n        margin-bottom:10px;\n    `,\n    tw `text-sm`\n])\n\nconst EditButton = styled(FontAwesomeIcon) ([\n    tw `absolute right-0 hover:cursor-pointer transition transform hover:scale-150`\n])\n\nconst Button = styled.button ([\n    tw `bg-green-500 hover:bg-green-700 text-white mt-2 font-bold py-2 px-2 border border-green-700 rounded self-center`\n])\n\nconst Title = styled.h3 ([\n    tw `mb-2 text-xl tracking-wider`\n])\n\nclass Education extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n             education: {\n                location:'',\n                dateStart:'',\n                dateEnd:'',\n                title:'',\n                educationEdit: false,\n            }\n        }\n        this.sumbitEducationForm = this.sumbitEducationForm.bind(this);\n        this.toggleEducationEdit = this.toggleEducationEdit.bind(this);\n    }\n\n    toggleEducationEdit() {\n        this.setState( prevState => ({\n            education: {\n                ...prevState.education,\n                educationEdit: !prevState.education.educationEdit\n            }\n        }))\n    }\n\n    sumbitEducationForm(e) {\n        e.preventDefault();\n        this.toggleEducationEdit();\n    }\n\n    changeLocation(e){\n        const newValue = e.target.value;\n        this.setState(prevState => ({\n            education:{\n                ...prevState.education,\n                location:newValue\n            }\n        }))\n    }\n\n    changeDateStart(e){\n        const newValue = e.target.value;\n        this.setState(prevState => ({\n            education:{\n                ...prevState.education,\n                dateStart:newValue\n            }\n        }))\n    }\n\n    changeDateEnd(e){\n        const newValue = e.target.value;\n        this.setState(prevState => ({\n            education:{\n                ...prevState.education,\n                dateEnd:newValue\n            }\n        }))\n    }\n\n    changeTitle(e) {\n        const newValue = e.target.value;\n        this.setState(prevState => ({\n            education:{\n                ...prevState.education,\n                title:newValue\n            }\n        }))\n    }\n\n    render() {\n        const {education: {educationEdit, location, dateStart, dateEnd, title}} = this.state;\n\n        return(\n            <Widget>\n                <Title>EDUCATION</Title>\n                {educationEdit &&\n                    <Form onSubmit={(e) => this.sumbitEducationForm(e)}>\n                        <label>Where did you studied</label>\n                        <input \n                            defaultValue={location}\n                            maxLength='20'\n                            onChange={(e) => this.changeLocation(e)}\n                        ></input>\n                        <label>Date Start</label>\n                        <input \n                            defaultValue={dateStart}\n                            onChange={(e) => this.changeDateStart(e)}\n                            type='month'\n                            ></input>\n                        <label>Date End</label>\n                        <input\n                            defaultValue={dateEnd}\n                            onChange={(e) => this.changeDateEnd(e)}\n                            type='month'\n                        ></input>\n                        <label>Title</label>\n                        <input\n                            defaultValue={title}\n                            maxLength='20'\n                            onChange={(e) => this.changeTitle(e)}\n                        ></input>\n                        <Button>End edit</Button>\n                    </Form>\n                }\n                        <EditButton \n                            onClick={this.toggleEducationEdit}\n                            icon={faEdit}/>\n                    <List>\n                        <li>Studied in: {location ? location : 'Where you studied'}</li>\n                        <li>Date: {dateStart ? dateStart : 'date'} / {dateEnd ? dateEnd : 'date'}</li>\n                        <li>Title: {title ? title : ''}</li>\n                    </List>\n            </Widget>\n        )\n\n    }\n}\n\nexport default Education;","/** @jsx jsx **/\nimport { jsx } from '@emotion/core';\nimport { Component } from 'react'\nimport  tw, { styled, css } from 'twin.macro';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport uniqid from 'uniqid';\n\nconst Title = styled.h3 ([\n    tw `mb-2 text-xl tracking-wider`\n])\n\nconst Widget = styled.div ([\n    css `\n        display:flex;\n        flex-direction:column;\n        border-bottom:1px solid gray;\n        width:95%;\n        margin: 0 auto;\n    `,\n    tw `mb-3  text-center flex-1 relative`\n])\n\nconst List = styled.ul ([\n    css `\n        flex: 1;\n        display:flex;\n        justify-content: space-between;\n        flex-direction:column;\n        margin-bottom:10px;\n    `,\n    tw `text-sm`\n])\n\nconst EditButton = styled(FontAwesomeIcon) ([\n    tw `absolute right-0 hover:cursor-pointer transition transform hover:scale-150`\n])\n\nconst Form = styled.form ([\n    css ` \n        font-family: 'Roboto', sans-serif;\n        position: absolute;\n        left:0;\n        z-index:1;\n        color:black;\n    `,\n    tw `text-center flex flex-col bg-gray-400 p-1 md:p-3 rounded-sm shadow-md`\n])\n\nconst Button = styled.button ([\n    tw `bg-green-500 hover:bg-green-700 text-white mt-2 font-bold py-2 px-2 border border-green-700 rounded self-center`\n])\n\nclass Skills extends Component {\n    constructor(props){\n        super(props)\n        this.state ={\n            arraySkills:[],\n            skillEdit:false,\n            newSkillInput: '' \n        }\n        this.sumbitSkillsForm = this.sumbitSkillsForm.bind(this);\n        this.toggleSkillEdit = this.toggleSkillEdit.bind(this);\n        this.deleteSkill = this.deleteSkill.bind(this);\n        this.handleChangeNewSkill = this.handleChangeNewSkill.bind(this);\n        this.addSkill = this.addSkill.bind(this)\n    }\n\n    toggleSkillEdit(){\n        this.setState( prevState => ({\n            skillEdit: !prevState.skillEdit\n        }))\n    }\n\n    sumbitSkillsForm(e){\n        e.preventDefault();\n        this.toggleSkillEdit();\n    }\n\n    deleteSkill(key) {\n        this.setState({\n            arraySkills: [...this.state.arraySkills.filter( skill =>\n            skill.key !== key)]\n        })\n    }\n\n    handleChangeNewSkill(e) {\n        this.setState({newSkillInput: e.target.value})\n    }\n\n    addSkill(){\n        const newSkill = {\n            skill: this.state.newSkillInput,\n            key: uniqid()\n        }\n\n        this.setState( prevState => ({\n            arraySkills: [...prevState.arraySkills, newSkill],\n            newSkillInput:''\n        }))\n    }\n\n    render() {\n        const { skillEdit, arraySkills, newSkillInput} = this.state\n\n        return(\n            <Widget tw='border-none mb-0'>\n                <Title>SKILLS</Title>\n                {skillEdit &&\n                    <Form onSubmit={(e) => this.sumbitSkillsForm(e)}>\n                        <label>Add a skill</label>\n                        <input\n                            maxLength='15'\n                            value={newSkillInput}\n                            onChange={(e) => this.handleChangeNewSkill(e)}\n                        ></input>\n                        <button \n                            type='button'\n                            onClick={this.addSkill}\n                            tw='bg-red-400 self-center rounded mb-5 mt-2 px-2 py-1 hover:bg-red-600 border border-red-600'\n                        >Send</button>\n                        {arraySkills.length > 0 &&\n                        <div>\n                            <label>Remove a Skill</label>\n                            <div css={css(css `overflow: auto; max-height:200px`)}>\n                                {arraySkills.map( skill => (\n                                    <div tw='bg-gray-200 border-blue-200 border-solid border-4 flex justify-around' key={skill.key + 'container'}>\n                                    <span key={skill.key}> {skill.skill}</span>\n                                    <button\n                                        tw='bg-red-400 rounded px-2 text-lg'\n                                        onClick={() => this.deleteSkill(skill.key)}\n                                        key={skill.key + 'button'}>×</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        }\n                        <Button type='submit'>End edit</Button>\n                    </Form>\n                }\n                <EditButton \n                    onClick={this.toggleSkillEdit}\n                    icon={faEdit}/>\n                <List>\n                    {arraySkills.length > 0 ? \n                    arraySkills.map( skill => (\n                        <li key={skill.key}>{skill.skill}</li>\n                    )) : <p>Add skills please</p>}\n                </List>\n            </Widget>\n        )\n    }\n}\n\nexport default Skills;","/** @jsx jsx **/\nimport { jsx } from '@emotion/core';\nimport { Component } from 'react'\nimport  tw, { styled, css } from 'twin.macro';\nimport Contact from './Contact'\nimport Education from './Education'\nimport Skills from './Skills'\n\nconst Container = styled.div([\n    css ` \n        font-family: 'Roboto', sans-serif;\n        background-color: #414143;\n    `,\n    tw `container rounded-l-sm rounded-t-none text-white flex flex-col\n        col-start-1 col-end-4 \n        sm:(row-start-2 row-end-6) sm:(col-start-1 col-end-2)\n    `\n])\n\nclass SideNav extends Component {\n    render() {\n        return(\n            <Container>\n                <Contact />\n                <Education />\n                <Skills />\n            </Container>\n        )\n    }\n}\n\nexport default SideNav;","import React from \"react\"\nimport tw, { styled, css } from 'twin.macro';\nimport BackgroundImage from './images/test.jpg';\nimport Header from './components/Header';\nimport Body from './components/main/Main';\nimport SideNav from \"./components/sidenav/SideNav\";\n\nconst Container = styled.div([\n  css `\n    background-color:#eee;\n    background-image: url(${BackgroundImage});\n    background-repeat: no-repeat;\n    background-attachment: fixed;\n    background-size: cover;\n    background-position: center left;\n    min-height: 100vh;\n    @media (max-width: 640px) {\n      background-image:none;\n    }\n  `,\n  tw `flex items-center`\n])\n\nconst Wrapper = styled.div([\n  css `\n    min-height: 98vh;\n    max-width: 100vw;\n    box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);\n    @media (max-width: 640px) {\n      min-height: 100vh;\n    }\n  `,\n  tw `container mx-auto rounded grid relative\n      grid-rows-3 grid-cols-3\n      sm:(grid-rows-5 grid-cols-3)\n      md:w-3/4 \n      lg:w-3/4 \n      xl:w-1/2`\n])\n\nfunction App() {\n  return (\n    <Container>\n      <Wrapper>\n          <Header />\n          <Body />\n          <SideNav />\n      </Wrapper>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'tailwindcss/dist/base.min.css';\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}